/**
* This file is auto-generated by nestjs-proto-gen-ts
*/

import { Observable } from 'rxjs';
import { Metadata } from '@grpc/grpc-js';

export namespace policy {
    export interface Student {
        studentId?: number;
        signature?: boolean;
    }
    export interface Lecture {
        numberOfSignatures?: number;
        students?: policy.Student[];
    }
    export interface Course {
        courseName?: string;
        policyId?: number;
        studentsInCourse?: number;
        lectures?: policy.Lecture[];
    }
    export enum PolicyType {
        COURSE_POLICY = 1,
    }
    export interface Policy {
        policyId?: number;
        policyName?: string;
        policyType?: policy.PolicyType;
        forms?: policy.Form[];
    }
    export enum FormType {
        COURSE_ATTENDANCE_FORM = 1,
    }
    export enum ValidationType {
        TOTAL_ATTENDANCE_PER_LECTURE = 1,
        MAX_MISSING_SIGNATURES_FOR_STUDENT = 2,
    }
    export interface Validation {
        validationType?: policy.ValidationType;
        value?: number;
    }
    export interface Form {
        formType?: policy.FormType;
        validations?: policy.Validation[];
    }
    export interface YourMessageService {
        createCourse(
            data: Course,
            metadata?: Metadata,
            ...rest: any[]
        ): Observable<Response>;
        getCourse(
            data: Request,
            metadata?: Metadata,
            ...rest: any[]
        ): Observable<Course>;
        updateCourse(
            data: Course,
            metadata?: Metadata,
            ...rest: any[]
        ): Observable<Response>;
        deleteCourse(
            data: Request,
            metadata?: Metadata,
            ...rest: any[]
        ): Observable<Response>;
    }
    export interface Request {
        courseId?: number;
    }
    export interface Response {
        success?: boolean;
    }
}

